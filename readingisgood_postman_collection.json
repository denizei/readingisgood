{
	"info": {
		"_postman_id": "ab4ef7d2-bdb5-4c37-b822-c14d8ee941d5",
		"name": "Reading is Good",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Wrong Authentication",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"ashketchumexample@example.com\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/authenticate",
					"host": [
						"{{path}}"
					],
					"path": [
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate as User",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"ashketchumexample@example.com\",\r\n    \"password\":\"abcd1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/authenticate",
					"host": [
						"{{path}}"
					],
					"path": [
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authenticate as Admin",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"deniz@example.com\",\r\n    \"password\":\"asdf1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/authenticate",
					"host": [
						"{{path}}"
					],
					"path": [
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Harry Potter and The Philosopher's Stone\",\r\n        \"author\": \"J.K. Rowling\",\r\n        \"price\": 30,\r\n        \"isbn\" : 1234123662211,\r\n        \"publicationYear\": 1980,\r\n        \"stockCount\": 142\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/book",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all the books in database",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/book",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query a book with id",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Words of Radiance\",\r\n        \"author\": \"Brandon Sanderson\",\r\n        \"price\": 22,\r\n        \"isbn\" : 1234567891235,\r\n        \"publicationYear\": 2014,\r\n        \"stockCount\": 6\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/book/2",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book in database by id - not found",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/book/4555",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book",
						"4555"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book in database by invalid id",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/book/adasdff",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book",
						"adasdff"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search books with keyword",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/book?name=a",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book"
					],
					"query": [
						{
							"key": "name",
							"value": "a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new Customer with USER role",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Kaladin\",\r\n        \"surname\": \"Stormblessed\",\r\n        \"email\": \"kaladin@example.com\",\r\n        \"address\": \"Aa 123 Roshar\",\r\n        \"password\": \"aaa111\"\r\n\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/customer",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Customer - duplicate error",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"name\": \"Ash\",\r\n        \"surname\": \"Ketchum\",\r\n        \"email\": \"ashketchumexample@example.com\",\r\n        \"address\": \"12 Kanto District Japan\",\r\n        \"password\": \"abcd1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/customer",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "Place an order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"books\": [\r\n            {\r\n                \"bookId\":68,\r\n                \"quantity\": 1\r\n            },\r\n            {\r\n                \"bookId\":354,\r\n                \"quantity\":2\r\n            }\r\n        ]\r\n        \r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/order",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Order from User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"books\": [\r\n            {\r\n                \"bookId\":33,\r\n                \"quantity\": 3\r\n            },\r\n            {\r\n                \"bookId\":2,\r\n                \"quantity\": 1\r\n            }\r\n        ]\r\n        \r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/order",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "View Order",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/order/34",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"order",
						"34"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Status Update",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderStatus\": \"PREPARING\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/order/changestatus/161",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"order",
						"changestatus",
						"161"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query orders with start and end dates",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/order?startDate=2020-01-01&endDate=2023-01-01",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"order"
					],
					"query": [
						{
							"key": "startDate",
							"value": "2020-01-01"
						},
						{
							"key": "endDate",
							"value": "2023-01-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query orders with start and end dates with pagination",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/order?startDate=2020-01-01&endDate=2023-01-01&limit=2&page=2",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"order"
					],
					"query": [
						{
							"key": "startDate",
							"value": "2020-01-01"
						},
						{
							"key": "endDate",
							"value": "2023-01-01"
						},
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "View Customer's Orders With wrong pagination",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/orders?page=-1&limit=-5",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"orders"
					],
					"query": [
						{
							"key": "page",
							"value": "-1"
						},
						{
							"key": "limit",
							"value": "-5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"price\": 21,\r\n        \"stockCount\": 14\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/book/68",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book",
						"68"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Book with Error",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"price\": 20,\r\n        \"stockCount\": -1\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/book/68",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"book",
						"68"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query of Orders without token",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/orders",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query of Orders By Admin",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/orders",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Query of Orders Pagination",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/orders?page=1&limit=3",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"orders"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Query of Orders by User",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{path}}/api/orders",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Display Monthly Statistics",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{adminToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{path}}/api/stats/monthly?startDate=2020-01&endDate=2023-01",
					"host": [
						"{{path}}"
					],
					"path": [
						"api",
						"stats",
						"monthly"
					],
					"query": [
						{
							"key": "startDate",
							"value": "2020-01"
						},
						{
							"key": "endDate",
							"value": "2023-01"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"try{",
					"    if(typeof pm.request.auth.bearer !=\"undefined\"){",
					"        var reqTime=new Date().getTime();",
					"        if(reqTime-(pm.collectionVariables.get('adminTime')||0)>86400000){",
					"            pm.sendRequest({",
					"            url: pm.collectionVariables.get('path')+'/authenticate',",
					"            method: 'POST',",
					"            header: {",
					"                'Content-Type': 'application/json'},",
					"            body: {",
					"                mode: 'raw',",
					"                raw: JSON.stringify({",
					"                \"email\":\"deniz@example.com\",",
					"                \"password\":\"asdf1234\"",
					"            })",
					"            }",
					"            }, function (err, response) {",
					"                var jsonData = response.json();",
					"                pm.collectionVariables.set(\"adminToken\", response.json().token);",
					"                pm.collectionVariables.set(\"adminTime\", reqTime);",
					"            });",
					"        }",
					"",
					"        if(reqTime-(pm.collectionVariables.get('userTime')||0)>86400000){",
					"            pm.sendRequest({",
					"            url: pm.collectionVariables.get('path')+'/authenticate',",
					"            method: 'POST',",
					"            header: {",
					"                'Content-Type': 'application/json'},",
					"            body: {",
					"                mode: 'raw',",
					"                raw: JSON.stringify({",
					"            \"email\":\"ashketchumexample@example.com\",",
					"            \"password\":\"abcd1234\"",
					"        })",
					"            }",
					"            }, function (err, response) {",
					"                var jsonData = response.json();",
					"                pm.collectionVariables.set(\"userToken\", response.json().token);",
					"                pm.collectionVariables.set(\"userTime\", reqTime-1000);",
					"            });",
					"        }",
					"    }",
					"}catch(exp){",
					"",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "path",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "userToken",
			"value": ""
		},
		{
			"key": "userTime",
			"value": ""
		},
		{
			"key": "adminToken",
			"value": ""
		},
		{
			"key": "adminTime",
			"value": ""
		}
	]
}